#! /bin/bash

# Installation Script
# Author: Tommy Nguyen [tommytoamtoe]
# Version: a-0.89
# Date: June 15, 2011
# Contact: tommytomatoe@gmail.com

# Setting Loop Variable
clear
APPLE=$1

# Functions

# .bash_profile
bpro ()
{	b=.bash_profile
	clear
	echo "Checking status of .bash_profile..."
	load_dot
	if [[ -s $HOME/$b ]] ; then
		echo
		echo "$b exists, would you like to: [default=3]"
		echo 
		echo "  1. Overwrite"
		echo "  2. Append to $b"
		echo "  3. Do not create new $b"
		read -s -n 1 ans
		case $ans in 
		1) bpro1;;
		2) bpro2;;
		*) echo; echo "$b remained unchanged"; enter;;
		esac
	else
		bpro3
	fi	
}

bpro1 ()
{	b=.bash_profile
	cp -v $HOME/$b $HOME/$b.bak
	echo
	echo "Removing $b"
	sudo rm $HOME/$b
	echo
	echo "Creating new $b"
	touch $HOME/$b
	( echo; echo "export PATH=\${PATH}:\$HOME/bin:\$HOME/android-utility:\$HOME/android-utility/utility:\$HOME/android-sdk/platform-tools/:\$HOME/android-sdk/tools" ) >>$b
	source $HOME/$b
	enter
}

bpro2 ()
{	b=.bash_profile
	cp -v $HOME/$b $HOME/$b.bak
	echo
	echo "Appending Information to $b"
	( echo; echo "export PATH=\${PATH}:\$HOME/bin:\$HOME/android-utility:\$HOME/android-utility/utility:\$HOME/android-sdk/platform-tools/:\$HOME/android-sdk/tools" ) >>$b
	source $HOME/$b
	enter
}

bpro3 ()
{	echo
	echo "$b does not exist. Preparing to create $b"
	echo "export PATH=\${PATH}:\$HOME/bin:\$HOME/android-utility:\$HOME/android-utility/utility:\$HOME/android-sdk/platform-tools/:\$HOME/android-sdk/tools" >>$b
	source $HOME/$b
	enter
}

#enterKey
enterKey()
{	echo "### Press [enter] to continue, any other key to quit";
	read -s -n 1 key
	if [[ $key = "" ]]; then 
  		echo 
	else
  		echo
  		echo "Installation aborted";
		enter
		inst
	fi
}

#enter
enter()
{	echo
	echo "Please press [enter] to continue";
	read -s -n 1 key
	if [[ $key = "" ]]; then 
  		echo
  		clear
	fi
}

#export PATH
export_PATH ()
{	cd $HOME/android-utility/
	echo "Your PATH:"
	echo
	echo "$PATH"
	echo
}

#load
load_dot ()
{	echo -n "."
	sleep .15
	echo -n "."
	sleep .15
	echo -n "."
	sleep .15
	echo -n "."
	sleep .15
	echo -n "."
	sleep .15
	echo "."
}

#make directories
makedir ()
{	w=$HOME/android-utility/working-folder
	d=`date +%b%e_%H%M%S`
	echo "Checking status of $w..."
	load_dot
	if [[ -s $w ]] ; then	
		echo
		echo "Working folder exists, would you like to start over? [default=Y]"
		echo
		echo "  1. Yes"
		echo "  2. No"
		echo "  3. Backup Current Working folder first"
		read -s -n 1 ans
		case $ans in 
		1) echo; rm -r $w; echo "Working folder replaced "; makedirB;;
		2) echo; echo "Working folder remained unchanged"; enter;;
		3) echo; mv $w $w$d; echo "Working folder save to $w$d"; echo; echo "Working folder replaced "; makedirB;;
		*) echo; rm -r $w; echo "Working folder replaced "; makedirB;;
		esac
	else
		echo "Making new working-folder"
		makedirB
	fi
}

makedirBIN ()
{	w=$HOME/bin
	echo "Checking status of $w..."
	load_dot
	if [[ -s $w ]] ; then
		echo
		echo "$w exists, would you like to overwrite? [default=Y]"
		echo
		echo "  1. Yes"
		echo "  2. No"
		read -s -n 1 ans
		case $ans in 
		1) echo; rm -r $w; makedirC; echo "$w replaced "; enter;;
		2) echo; echo "/bin remained unchanged"; enter;;
		*) echo; rm -r $w; makedirC; echo "$w replaced "; enter;;
		esac
	else
		makedirC
		enter
	fi	
}


makedirB ()
{	mkdir $HOME/android-utility/working-folder
	mkdir $w/mod-here-solo
	mkdir $w/mod-here-multi
	mkdir $w/framework-here
	mkdir $w/ninepatch
	enter
	}

makedirC ()
{	y=$HOME/bin
	echo "Creating New bin Directory"
	mkdir $y
	echo 
}

#quit
quit()
{	clear
	exit
}

#select
selection ()
{	echo
	echo "You've selcted [$COM]"
	echo
}

## INSTALLS

clean_in ()
{	c=$HOME/android-utility/resources/clean
	b=$HOME/bin
	u=/usr/local/bin
	echo "Adding resources to $u and /usr/bin"
	sudo cp -v $c/aapt-9 $u/aapt
	sudo cp -v $c/apktool $u/
	sudo cp -v $c/apktool-1.4.1.jar $u/apktool.jar
	ins_sed
	echo "Adding resources to $b"
	load_dot
	cp -v $c/7z $b/
	cp -v $c/7z.so $b/	
	cp -v $c/adb $b/adb
	cp -v $c/baksmali $b/
	cp -v $c/baksmali.jar $b/
	cp -v $c/decode9patchPng.jar $b/
	cp -v $c/pngout $b/
	cp -v $c/smali $b/
	cp -v $c/smali.jar $b/
}



first_time ()
{	COM="First Time Install"
	selection
	enterKey
	bpro
	makedir
	makedirBIN
	export_PATH
	load_dot
	c=$HOME/android-utility/resources/clean
	echo "Adding executable permission to resources"
	load_dot
	chmod 755 $c/*
	clean_in
	load_dot
	echo "Fixing permissions"
	load_dot
	sudo chmod 755 /usr/local/bin/*
	sudo chmod 755 $HOME/bin/*
	echo "All Done. Now, enjoy android-utility"
	enter
}

ins_apktool ()
{	COM="Install new apktool"
	c=$HOME/android-utility/resources/clean
	u=/usr/local/bin
	selection
	enterKey
	clear
	echo "Your current verion of apktool is listed as:"
	echo
	echo "### `apktool | sed -n 1p`"
	echo
	echo "Which version of apktool would you like to install?"
	echo
	echo "  1.  apktool 1.3.1"
	echo "  2.  apktool 1.3.2"
	echo "  3.  apktool 1.4.1"
	echo
	echo "  x.  Keep current version"
	echo
	printf "Please make your selection: "
	read sel
	case $sel in
	 1) echo; sudo cp -v $c/apktool1.3.1/apktool.jar $u/; atool_v;;
	 2) echo; sudo cp -v -v $c/apktool1.3.2/apktool.jar $u/; atool_v;;
	 3) echo; sudo cp -v -v $c/apktool1.4.1/apktool.jar $u/; atool_v;;
	 x) echo; echo "Current version has not been changed";;
	 *) echo; echo "$sel is not a valid option"; echo;;	
	esac
	enter
	}

#just to remind apktool version
atool_v ()
{	echo
	echo "Your version of apktool is now:"
	echo 
	echo "### `apktool | sed -n 1p`"
	}

ins_aapt ()
{	COM="Install new aapt"
	c=$HOME/android-utility/resources/clean/aapt
	u=/usr/local/bin
	selection
	enterKey
	clear
	echo "Which version of aapt would you like to install?"
	echo
	echo "  1.  aapt sdk  8 - Froyo Development"
	echo "  2.  aapt sdk  9 - Gingerbread Development"
	echo "  3.  aapt sdk 10 - Honeycomb Development"
	echo
	echo "  x.  Keep current version"
	echo
	echo
	printf "Please make your selection: "
	read sel
	case $sel in
	 1) echo; sudo cp -v $c/aapt-8 $u/aapt; aapt_vv;;
	 2) echo; sudo cp -v $c/aapt-9 $u/aapt; aapt_vv;;
	 3) echo; sudo cp -v $c/aapt-10 $u/aapt; aapt_vv;;
	 x) echo; echo "Current version has not been changed";;
	 *) echo; echo "$sel is not a valid option"; echo;;	
	esac
	enter
	}

#aapt updated
aapt_vv ()
{	echo
	echo "Your version of aapt has been updated"
}
	
ins_addon ()
{	COM="Install new add-ons"
	selection
	enterKey
	clear
	echo "Option coming in a future release. Stay tuned."
	enter
	}

ins_sed ()
{	c=$HOME/android-utility/resources/clean
	COM="Install GNU sed"
	selection
	enterKey
	sed --version &>/dev/null
	if [[ "$?" = "0" ]] ; then
		echo "You already have GNU sed."
		echo "Continue with Install"
	else
	echo "Renaming FreeBSD sed"
	load_dot
	sudo mv -v /usr/bin/sed /usr/bin/sed-BSD
	load_dot
	echo "Installing GNU sed"
	load_dot
	sudo cp -v $c/gnused /usr/bin/sed
	fi
	enter
}
	

inst () 
{	date +%b%e_%H%M%S
	clear
echo "     -----------------------     "
echo "|    Android Utility v a0.89    |"
echo "|      Installaltion Guide      |"
echo "|-------------------------------|"
echo "|-------------------------------|"
echo "| 1.  First Time Install        |"
echo "|-------------------------------|"
echo "| 2.  Install new apktool       |"
echo "| 3.  Install new aapt          |"
echo "| 4.  Install new add-ons       |"
echo "| 5.  Install Working Folder    |"
echo "| 6.  Install GNU sed           |"
echo "|-------------------------------|"
echo "| x.  Run Android Utility       |"
echo "|-------------------------------|"
echo "|-------------------------------|"
echo "| q.  Quit Installation Guide   |"
echo "     -----------------------     "
printf %s "  Please Select Install: "
read num
case $num in
 1) first_time;;
 2) ins_apktool;;
 3) ins_aapt;;
 4) ins_addon;;
 5) clear; makedir;;
 6) ins_sed;;
 x) andutil;;
 q) quit;;
 *) echo; echo "$num is not a valid option"; enter;
esac
}


if [[ ${1} == "-l" ]] || [[ ${1} == "--log" ]]
then
	$0 | tee $HOME/android-utility/logs/LOGinstall_`date +%H%M%S`.txt
fi


while [ "$APPLE" = "" ]
do
	inst
done