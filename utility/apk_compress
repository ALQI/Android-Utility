#! /bin/bash

# Apk Compression Script Linux
# Author: Tommy Nguyen [tommytomatoe]
# Version: 1.0.2
# Date: August 23, 2011
# Contact: tommytomatoe@gmail.com

# Functions

#enter
enter()
{	echo
	echo -n "Please press [enter] when ready ";
	read -s -n 1 key
	if [[ $key = "" ]]; then 
  		echo &>/dev/null
	fi
}

#load
load_dot ()
{	for r in . . . . . .
	do
	echo -n $r
	sleep .1
	done
	echo "."
}

#quit
quit()
{	echo
	echo "Thank you for choosing Android Utility"
	echo "brought to you by tommytomatoe :-)"
	echo
	echo "Please Don't Drink and Drive"
	sleep .25
	clear
	exit
}

decomp_it ()
{
cd $e	
for F in *.apk ; do
echo "Decompressing $F"
cd $e
unzip -o $F -d "${F/.apk}" &>/dev/null
cd $e/${F/.apk}
zip -"$COMP"r $d/decompressed_apps/$F *
if [[ "$?" -ne "0" ]] ; then
	echo "On `date +%b%e_%H%M%S`, $F was not decompressed Properly" >> $HOME/android-utility/log/compress_log
	echo "Please check compress_log"
	LOG=TRUE	
else
	echo "$F Decompressed"
fi
rm -r $d/original_apps/${F/.apk}
done
if [[ "$LOG" = "true" ]] ; then
	echo
	echo "Please check compress_log for apk with errors"
else
	echo &>/dev/null
fi
echo
load_dot
echo
echo -n "Would you like to auto-zipalign at this time? [Y/n] "
read -s -n 1 ans
case $ans in
n|N) echo ; echo ; echo "Cancelling zipalignment" ;;
*) echo ; zipo ;;
esac
}


zipo ()
{
if [[ -s $d/temp ]] ; then
	echo &>/dev/null
else
	mkdir $d/temp
fi
cd $d/decompressed_apps
echo
echo "Preparing to zipalign `ls | grep -c .apk` apk files"
echo
load_dot
echo
for z in *.apk ; do
	zipalign -fv 4 $z $d/temp/$z
	mv -f $d/temp/$z $d/decompressed_apps
done
rm -r $d/temp
echo
load_dot
clear
echo
cd $d/decompressed_apps
echo "Successfully zipaligned `for F in *.apk ; do zipalign -cv 4 $F ; done | grep -c "Verification succesful"` apk files. Congrats!"
echo "Failed to zipalign `for F in *.apk ; do zipalign -cv 4 $F ; done | grep -c "Verification FAILED"` apk files."
echo
echo "Apks are decompressed for less stress on RAM"
echo
echo "Find new apks in decompressed_apps"
}

method ()
{
unzip -o $F -d "${F/.apk}" &>/dev/null
cd $d/original_apps/"${a/.apk}"
zip -"$COMP"r $d/decompressed_apps/$a *
rm -r $e/${F/.apk}
}

clear
COMP=5
LOG=FALSE
d=$HOME/android-utility/working-folder/mod-here-multi
e=$d/original_apps
cd $d
echo "Welcome to Apk Compression Manager"
echo
echo "Compression Level set to $COMP"
echo "[0 = no compression | 9 = high compression]"
echo
echo -n "Please set compression level [default=5 ; 0 -> 9]: "
read COMP
if [[ $COMP == "" ]] ; then
	COMP=5
fi
echo
echo "Compression Level set to $COMP"
echo
if [[ -s $e ]] ; then
	echo &>/dev/null
else
	mkdir $e
fi
echo "Please Place apks in $d/original_apps"
	if [[ -s original_apps ]] ; then
		echo &>/dev/null
	else
		mkdir original_apps
	fi
enter
if [[ -s $d/decompressed_apps ]] ; then
	rm -r $d/decompressed_apps &>/dev/null
	mkdir $d/decompressed_apps
else
	mkdir $d/decompressed_apps
fi
echo
echo "Preparing to decompress Apks with Compression Level $COMP"
echo
decomp_it
echo
echo -n "Remove Original Apks? [Y/n]: "
read yes
case $yes in 
	y|Y) rm -r $e;;
	n|N) echo "Original apps saved in "original_apps"";;
	*) rm -r $e;;	
esac
quit

